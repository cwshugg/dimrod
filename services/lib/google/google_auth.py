# This module implements an interface for authenticating with Google services.
#
# Resources:
# - https://developers.google.com/identity/protocols/oauth2/service-account
# - https://googleapis.dev/python/google-auth/latest/user-guide.html

# Imports
import os
import sys

# Enable imports from the grandparent directory
gpdir = os.path.dirname(os.path.dirname(os.path.dirname(os.path.realpath(__file__))))
if gpdir not in sys.path:
    sys.path.append(gpdir)

# Imports
from google.oauth2.credentials import Credentials
from google.oauth2 import service_account

class GoogleCredentials:
    # Constructor. Takes in:
    #  - A scopes list (a list of scope strings this credential is allowed to
    #    use).
    #  - A service account credential file path (a path to the service account
    #    credential file generated by Google Cloud).
    def __init__(self, scopes: list, service_account_path: str):
        self.creds = None
        self.scopes = scopes
        
        # make sure the given credential path exists
        self.service_account_path = service_account_path
        assert os.path.isfile(self.service_account_path), "The given `service_account_path` string is not a file."

    # Attempts to establish authentication. The credential object is returned.
    def authenticate(self):
        # use the service account path and scope list to generate credentials
        self.creds = service_account.Credentials.from_service_account_file(
            self.service_account_path,
            scopes=self.scopes
        )
        return self.creds

